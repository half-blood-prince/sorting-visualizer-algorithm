{"version":3,"sources":["common/components/GlobalComponent.tsx","common/components/DropdownList.tsx","sort/algorithm/bubble/components/VerticalLine.tsx","sort/algorithm/bubble/components/HorizontalList.tsx","utils/utils.ts","sort/algorithm/bubble/screens/BubbleSortScreen.tsx","styles/Colors.ts","styles/Themes.ts","common/components/Input.tsx","github-logo.svg","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Header","header","theme","colors","surface","Content","background","Footer","footer","HeaderTitle","h1","onSurface","ToolBar","DropDown","select","DropDownItem","option","SortVisualizerContainer","Input","input","PrimaryButton","button","primary","onPrimary","FooterLinkText","Logo","img","FooterTitle","Link","a","DropdownList","props","onChange","e","target","value","dropdownList","map","item","key","name","VerticalLine","attrs","height","width","isSelected","style","secondary","HorizontalList","sleep","ms","Promise","resolve","setTimeout","safeParseInt","num","defaultValue","parseInt","getRandomInt","min","max","Math","floor","random","BubbleSortScreen","maxValue","datasetMaxValue","screenHeight","console","log","useState","dataset","data","setData","swapIndices","setSwapIndices","isSortingInProgress","setIsSortingInProgress","isComponentActive","useRef","cleanupCallback","useCallback","current","useEffect","initiateBubbleSort","exectionStatusCallback","swapIndex1","swapIndex2","i","length","isSwapOccured","j","temp","slice","executionDelayInMillis","index","arr","disabled","onClick","LightColors","onBackground","onSecondary","DarkColors","getTheme","ToolbarNumberInput","require","getSortingVisualizerScreen","sortAlgorithmId","screenWidth","App","setTheme","setSortAlgorithmId","setExecutionDelayInMillis","setDatasetMaxValue","datasetLength","setDatasetLength","setDataset","contentHeight","setContentHeight","contentWidth","setContentWidth","contentRef","setSortingInProgress","clientHeight","clientWidth","limit","isNaN","randomArray","Array","toString","generateRandomNumbers","currentTheme","sortAlgorithm","title","showAdvancedControls","executionDelayInMilliseconds","placeholder","type","maxLength","minDatasetValue","maxDatasetValue","maxSize","maxDatasetSize","ref","href","rel","src","githubLogo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q4BAEMA,EAAYC,IAAOC,IAAV,6GAOTC,EAASF,IAAOG,OAAV,sDACU,qBAAGC,MAAkBC,OAAOC,WAG5CC,EAAUP,IAAOC,IAAV,wFACS,qBAAGG,MAAkBC,OAAOG,cAK5CC,EAAST,IAAOU,OAAV,sDACU,qBAAGN,MAAkBC,OAAOC,WAG5CK,EAAcX,IAAOY,GAAV,kEACN,qBAAGR,MAAkBC,OAAOQ,aAIjCC,EAAUd,IAAOC,IAAV,6IACS,qBAAGG,MAAkBC,OAAOC,WAS5CS,EAAWf,IAAOgB,OAAV,qKAIQ,qBAAGZ,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOQ,aAOjCI,EAAejB,IAAOkB,OAAV,0BAEZC,EAA0BnB,IAAOC,IAAV,sGAOvBmB,EAAQpB,IAAOqB,MAAV,oOAIW,qBAAGjB,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOQ,aAG1B,qBAAGT,MAAkBC,OAAOQ,aASnCS,EAAgBtB,IAAOuB,OAAV,sOAIG,qBAAGnB,MAAkBC,OAAOmB,WACvC,qBAAGpB,MAAkBC,OAAOoB,aAWjCC,EAAiB1B,IAAOC,IAAV,iMAad0B,EAAO3B,IAAO4B,IAAV,6DAKJC,EAAc7B,IAAOY,GAAV,2GACN,qBAAGR,MAAkBC,OAAOQ,aAMjCiB,EAAO9B,IAAO+B,EAAV,sD,eClFKC,EAnBgC,SAC7CC,GAEA,OACE,cAAClB,EAAD,2BACMkB,GADN,IAEEC,SAAU,SAACC,GAAO,IAAD,EACf,UAAAF,EAAMC,gBAAN,cAAAD,EAAiBE,EAAEC,OAAOC,QAH9B,SAMGJ,EAAMK,aAAaC,KAAI,SAACC,GAAD,OACtB,cAACvB,EAAD,CAA6BoB,MAAOG,EAAKC,IAAzC,SACGD,EAAKE,MADWF,EAAKC,Y,wBCHjBE,EAhBM3C,IAAOC,IAAI2C,OAAM,SAACX,GAAD,MAA8B,CAClEY,OAAQZ,EAAMY,OACdC,MAAOb,EAAMa,MACbC,WAAYd,EAAMc,WAClBC,MAAO,CACLH,OAAQZ,EAAMY,OACdC,MAAOb,EAAMa,UANI9C,CAAH,qHASI,gBAAGI,EAAH,EAAGA,MAAH,SAAU2C,WACf3C,EAAMC,OAAOmB,QAAUpB,EAAMC,OAAO4C,aCPtCC,EATQlD,IAAOC,IAAV,2JCAdkD,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAmBhDI,EAAe,SAACC,GAA2C,IAA9BC,EAA6B,uDAAN,EACxD,IACE,OAAOC,SAASF,GAChB,MAAOtB,GACP,OAAOuB,IAILE,EAAe,SAACC,EAAaC,GACjC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IC8EvCK,GA3FU,SACvBjC,GAEA,IAAMkC,EAAWJ,KAAKD,IAAI7B,EAAMmC,gBAAiBnC,EAAMoC,cAEvDC,QAAQC,IAAI,uBAHT,MAKqBC,mBAA2BvC,EAAMwC,SALtD,mBAKIC,EALJ,KAKUC,EALV,OAOmCH,mBAAS,EAAE,GAAI,IAPlD,mBAOII,EAPJ,KAOiBC,EAPjB,OASmDL,oBAAS,GAT5D,mBASIM,EATJ,KASyBC,EATzB,KAWGC,EAAoBC,kBAAgB,GAEpCC,EAAkBC,uBAAY,WAClCb,QAAQC,IAAI,kCACZS,EAAkBI,SAAU,IAC3B,IAEHC,qBAAU,WAGR,OAFAV,EAAQ1C,EAAMwC,SACdO,EAAkBI,SAAU,EACrBF,IACN,CAACA,EAAiBjD,EAAMwC,UAE3B,IAAMa,EAAkB,uCAAG,sCAAAvD,EAAA,sDACzBuC,QAAQC,IAAI,wBAEZtC,EAAMsD,wBAAuB,GAC7BR,GAAuB,GAEnBS,EAAa,EACbC,GAAc,EAETC,EAAI,EATY,YASTA,EAAIhB,EAAKiB,QAAUX,EAAkBI,SAT5B,iBAUnBQ,GAAgB,EACXC,EAAI,EAXU,YAWPA,EAAInB,EAAKiB,OAAS,GAAKX,EAAkBI,SAXlC,oBAYjBV,EAAKmB,GAAGnB,KAAOA,EAAKmB,EAAI,GAAGnB,OACvBoB,EAAOpB,EAAKmB,GAClBnB,EAAKmB,GAAKnB,EAAKmB,EAAI,GACnBnB,EAAKmB,EAAI,GAAKC,EAEdF,GAAgB,EAChBJ,EAAaK,EACbJ,EAAaI,EAAI,EAEjBvB,QAAQC,IACN,wCACEiB,EACA,eACAC,KAIFG,EA7BiB,wBA8BnBjB,GAAQ,SAAC5C,GAAD,OAAO2C,EAAKqB,WACpBlB,EAAe,CAACW,EAAYC,IA/BT,UAgCbtC,EAAMlB,EAAM+D,wBAhCC,QAW2CH,IAX3C,0BAmClBD,EAnCkB,qDASqCF,IATrC,uBAsCzBzD,EAAMsD,wBAAuB,GAC7BR,GAAuB,GAvCE,4CAAH,qDA0CxB,OACE,eAAC5D,EAAD,WACE,cAAC,EAAD,UACGuD,EAAKnC,KAAI,SAACC,EAAMyD,EAAOC,GAAd,OACR,cAAC,EAAD,CAEErD,OAASL,EAAKkC,KAAOP,EAAY,IAAM,IACvCrB,MAAO,OACPC,WAAYkD,IAAUrB,EAAY,IAAMqB,IAAUrB,EAAY,IAHzDpC,EAAKC,UAQhB,cAACnB,EAAD,CACE6E,SAAUrB,EACVsB,QAASd,EAFX,uBCxFAe,GAAc,CAClB7F,WAAY,UACZF,QAAS,UACTkB,QAAS,UACTyB,UAAW,UACXqD,aAAc,UACdzF,UAAW,UACXY,UAAW,UACX8E,YAAa,WAGTC,GAAa,CACjBhG,WAAY,UACZF,QAAS,UACTkB,QAAS,UACTyB,UAAW,UACXqD,aAAc,UACdzF,UAAW,UACXY,UAAW,UACX8E,YAAa,WCpBFE,GAAW,SAACrG,GACvB,MAAO,CAAEA,MAAOA,EAAOC,OAAkB,SAAVD,EAAmBoG,GAAaH,KCJlDK,GAJY1G,YAAOoB,EAAPpB,CAAH,4CCHT,OAA0B,wCC2BnC0E,GAAeiC,EAAQ,IAoJvBC,GAA6B,SACjCC,EACApC,EACAL,EACAvB,EACAC,EACAkD,EACAT,GAEA,OAAQsB,GACN,IAAK,IACH,OACE,cAAC,GAAD,CACEnE,KAAK,cACL+B,QAASA,EACTJ,aAAcxB,EACdiE,YAAahE,EACbsB,gBAAiBA,EACjB4B,uBAAwBA,EACxBT,uBAAwBA,IAG9B,IAAK,IACH,OAAO,cAAC5E,EAAD,6BAET,QACE,OAAO,cAACA,EAAD,+BAIEoG,GAhLH,WAAO,IAAD,EACUvC,mBAAS,QADnB,mBACTpE,EADS,KACF4G,EADE,OAG8BxC,mBAAS,KAHvC,mBAGTqC,EAHS,KAGQI,EAHR,OAI4CzC,mBAAS,GAJrD,mBAITwB,EAJS,KAIekB,EAJf,OAM8B1C,mBAAS,KANvC,mBAMTJ,EANS,KAMQ+C,EANR,OAO0B3C,mBAAS,IAPnC,mBAOT4C,EAPS,KAOMC,EAPN,OAQc7C,mBAA2B,IARzC,mBAQTC,EARS,KAQA6C,EARA,OAU0B9C,mBAAS,GAVnC,mBAUT+C,EAVS,KAUMC,EAVN,OAWwBhD,mBAAS,GAXjC,mBAWTiD,EAXS,KAWKC,EAXL,KAYVC,EAAa1C,iBAAuB,MAZ1B,EAcoCT,oBAAS,GAd7C,mBAcTM,EAdS,KAcY8C,GAdZ,KAgBhBvC,qBAAU,WAAO,IAAD,IACRxC,EAAM,OAAG8E,QAAH,IAAGA,GAAH,UAAGA,EAAYvC,eAAf,aAAG,EAAqByC,aACpCL,EAAiB3E,GAAkB,GAEnC,IAAMC,EAAK,OAAG6E,QAAH,IAAGA,GAAH,UAAGA,EAAYvC,eAAf,aAAG,EAAqB0C,YACnCJ,EAAgB5E,GAAgB,GAEhCwE,EN9C0B,SAC5BxD,EACAiE,GAEA,GAAIjE,GAAO,GAAKiE,GAAS,GAAKC,MAAMlE,IAAQkE,MAAMD,GAAQ,MAAO,GAGjE,IADA,IAAME,EAAc,IAAIC,MAAiBH,GAChCrC,EAAI,EAAGA,EAAIqC,EAAOrC,IACzBuC,EAAYvC,GAAK,CACfhB,KAAMX,KAAKC,MAAMD,KAAKE,SAAWH,GACjCrB,IAAKiD,EAAEyC,YAGX,OAAOF,EMiCMG,CAAsBhE,EAAiBgD,MACjD,CAACO,EAAYvD,EAAiBgD,IAcjC,OACE,cAAC,IAAD,CAAehH,MAAOqG,GAASrG,GAA/B,SACE,eAACL,EAAD,WACE,cAACG,EAAD,UACE,cAACS,EAAD,CAAayF,QAhBD,WAClBY,GAAS,SAACqB,GAAD,MAAoC,SAAjBA,EAA0B,QAAU,WAe1D,6CAIF,eAACvH,EAAD,WACE,cAAC,EAAD,CACEqF,SAAUrB,EACVxC,aAAcoC,GAAK4D,cACnBC,MAAM,6BACNrG,SAAU+E,KAGVvC,GAAK8D,sBACL,cAAC,EAAD,CACEnG,MAAO2D,EAAuBmC,WAC9BhC,SAAUrB,EACVxC,aAAcoC,GAAK+D,6BACnBF,MAAM,2BACNrG,SAAU,SAACkB,GACT8D,EAA0B1D,EAAaJ,EAAI,OAKhDsB,GAAK8D,sBACJ,cAAC,GAAD,CACErC,SAAUrB,EACV4D,YAAa,YACbC,KAAM,SACNC,UAAW,GACX1G,SAAU,SAACC,GAAD,OACRgF,EACEpD,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,aAG3CA,MAAO+B,IAIVM,GAAK8D,sBACJ,cAAC,GAAD,CACErC,SAAUrB,EACV4D,YAAa,iBACbC,KAAM,SACNC,UAAW,EACX1G,SAAU,SAACC,GAAD,OACRkF,EAAiBtD,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,SAE1DA,MAAO+E,IAIV1C,GAAK8D,sBACJ,cAAC,GAAD,CACErC,SAAUrB,EACV4D,YAAa,wBACbC,KAAM,SACNC,UAAW,EACX1G,SAAU,SAACC,GAAD,OACR+E,EACEnD,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,QAG3CA,MAAO2D,IAIX,cAAC1E,EAAD,CACE8E,QAhFiB,WACzB,IAAMjC,EAAWP,EAAac,GAAKmE,gBAAiBnE,GAAKoE,iBACnDC,EAAUnF,EAAac,GAAKmE,gBAAiBnE,GAAKsE,gBAExD7B,EAAmBhD,GACnBkD,EAAiB0B,IA4ET5C,SAAUrB,EAFZ,qCAOF,cAACvE,EAAD,CAAS0I,IAAKtB,EAAd,SACGlD,GACCmC,GACEC,EACApC,EACAL,EACAmD,EACAE,EACAzB,EACA4B,MAIN,cAACnH,EAAD,UACE,cAACqB,EAAD,CACEoH,KAAK,oEACL9G,OAAO,SACP+G,IAAI,sBAHN,SAKE,eAACzH,EAAD,WACE,cAACC,EAAD,CAAMyH,IAAKC,KACX,cAACxH,EAAD,uCCxJCyH,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.cee8d967.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst Header = styled.header`\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst Content = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  flex: 1;\n  flex-flow: column;\n`;\n\nconst Footer = styled.footer`\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst HeaderTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.onSurface};\n  text-align: center;\n`;\n\nconst ToolBar = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  flex-direction: row;\n  display: flex;\n\n  align-items: center;\n\n  padding: 8px;\n`;\n\nconst DropDown = styled.select`\n  padding: 8px;\n  font-size: 16px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  outline: none;\n\n  :hover {\n    opacity: 0.85;\n  }\n`;\nconst DropDownItem = styled.option``;\n\nconst SortVisualizerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Input = styled.input`\n  font-size: 16px;\n  padding: 8px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  border-width: 1px;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.onSurface};\n  }\n  :hover {\n    opacity: 0.85;\n  }\n\n  outline: none;\n`;\n\nconst PrimaryButton = styled.button`\n  font-size: 16px;\n  padding: 8px;\n  min-width: 75px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.onPrimary};\n\n  :hover {\n    opacity: 0.85;\n  }\n  :disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst FooterLinkText = styled.div`\n  flex-direction: row;\n  display: flexbox;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n\n  :hover {\n    opacity: 0.85;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst FooterTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.onSurface};\n  font-size: 18px;\n  text-align: center;\n  margin-left: 8px;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\nexport {\n  Container,\n  Header,\n  HeaderTitle,\n  Content,\n  Footer,\n  ToolBar,\n  DropDown,\n  DropDownItem,\n  SortVisualizerContainer,\n  Input,\n  PrimaryButton,\n  Logo,\n  FooterTitle,\n  FooterLinkText,\n  Link,\n};\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { DropDown, DropDownItem } from \"./GlobalComponent\";\n\ntype Item = {\n  key: string;\n  name: string;\n};\n\ntype Props = {\n  disabled: boolean;\n  dropdownList: Array<Item>;\n  title?: string;\n  value?: string;\n  onChange?: (id: string) => void | null;\n};\n\nconst DropdownList: FunctionComponent<Props> = (\n  props: PropsWithChildren<Props>\n) => {\n  return (\n    <DropDown\n      {...props}\n      onChange={(e) => {\n        props.onChange?.(e.target.value);\n      }}\n    >\n      {props.dropdownList.map((item) => (\n        <DropDownItem key={item.key} value={item.key}>\n          {item.name}\n        </DropDownItem>\n      ))}\n    </DropDown>\n  );\n};\n\nexport default DropdownList;\n","import styled from \"styled-components\";\n\ntype VerticalLineProp = {\n  height: any;\n  width: any;\n  isSelected: boolean;\n};\n\nconst VerticalLine = styled.div.attrs((props: VerticalLineProp) => ({\n  height: props.height,\n  width: props.width,\n  isSelected: props.isSelected,\n  style: {\n    height: props.height,\n    width: props.width,\n  },\n}))`\n  background-color: ${({ theme, isSelected }) =>\n    isSelected ? theme.colors.primary : theme.colors.secondary};\n  margin-left: 0.1%;\n  margin-right: 0.1%;\n  display: flex;\n`;\n\nexport default VerticalLine;\n","import styled from \"styled-components\";\n\nconst HorizontalList = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nexport default HorizontalList;\n","import ArrayData from \"../sort/types/ArrayData\";\n\nconst sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst generateRandomNumbers = (\n  max: number,\n  limit: number\n): Array<ArrayData> => {\n  if (max <= 0 || limit <= 0 || isNaN(max) || isNaN(limit)) return [];\n\n  const randomArray = new Array<ArrayData>(limit);\n  for (let i = 0; i < limit; i++) {\n    randomArray[i] = {\n      data: Math.floor(Math.random() * max),\n      key: i.toString(),\n    };\n  }\n  return randomArray;\n};\n\nconst safeParseInt = (num: string, defaultValue: number = 0) => {\n  try {\n    return parseInt(num);\n  } catch (e: any) {\n    return defaultValue;\n  }\n};\n\nconst getRandomInt = (min: number, max: number): number => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport { sleep, generateRandomNumbers, safeParseInt, getRandomInt };\n","import React, {\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport VerticalLine from \"../components/VerticalLine\";\nimport HorizontalList from \"../components/HorizontalList\";\nimport {\n  PrimaryButton,\n  SortVisualizerContainer,\n} from \"../../../../common/components/GlobalComponent\";\nimport SortVisualizerScreenProp from \"../../../types/SortVisualizerScreenProp\";\nimport { sleep } from \"../../../../utils/utils\";\nimport ArrayData from \"../../../types/ArrayData\";\n\nconst BubbleSortScreen = (\n  props: PropsWithChildren<SortVisualizerScreenProp>\n) => {\n  const maxValue = Math.max(props.datasetMaxValue, props.screenHeight);\n\n  console.log(\"Component re-render\");\n\n  const [data, setData] = useState<Array<ArrayData>>(props.dataset);\n\n  const [swapIndices, setSwapIndices] = useState([-1, -1]);\n\n  const [isSortingInProgress, setIsSortingInProgress] = useState(false);\n\n  const isComponentActive = useRef<boolean>(false);\n\n  const cleanupCallback = useCallback(() => {\n    console.log(\"Cleaning up bubble sort screen\");\n    isComponentActive.current = false;\n  }, []);\n\n  useEffect(() => {\n    setData(props.dataset);\n    isComponentActive.current = true;\n    return cleanupCallback;\n  }, [cleanupCallback, props.dataset]);\n\n  const initiateBubbleSort = async () => {\n    console.log(\"Initated bubble sort\");\n\n    props.exectionStatusCallback(true);\n    setIsSortingInProgress(true);\n\n    let swapIndex1 = 1;\n    let swapIndex2 = -1;\n\n    for (let i = 0; i < data.length && isComponentActive.current; i++) {\n      let isSwapOccured = false;\n      for (let j = 0; j < data.length - 1 && isComponentActive.current; j++) {\n        if (data[j].data > data[j + 1].data) {\n          const temp = data[j];\n          data[j] = data[j + 1];\n          data[j + 1] = temp;\n\n          isSwapOccured = true;\n          swapIndex1 = j;\n          swapIndex2 = j + 1;\n\n          console.log(\n            \"Running swapping elements swapIndex1 \" +\n              swapIndex1 +\n              \" swapIndex2 \" +\n              swapIndex2\n          );\n        }\n\n        if (isSwapOccured) {\n          setData((a) => data.slice());\n          setSwapIndices([swapIndex1, swapIndex2]);\n          await sleep(props.executionDelayInMillis);\n        }\n      }\n      if (!isSwapOccured) break;\n    }\n\n    props.exectionStatusCallback(false);\n    setIsSortingInProgress(false);\n  };\n\n  return (\n    <SortVisualizerContainer>\n      <HorizontalList>\n        {data.map((item, index, arr) => (\n          <VerticalLine\n            key={item.key}\n            height={(item.data / maxValue) * 100 + \"%\"}\n            width={\"50px\"}\n            isSelected={index === swapIndices[0] || index === swapIndices[1]}\n          />\n        ))}\n      </HorizontalList>\n\n      <PrimaryButton\n        disabled={isSortingInProgress}\n        onClick={initiateBubbleSort}\n      >\n        Start\n      </PrimaryButton>\n    </SortVisualizerContainer>\n  );\n};\n\nexport default BubbleSortScreen;\n","export type Colors = {\n  background: string;\n  surface: string;\n  primary: string;\n  secondary: string;\n  onBackground: string;\n  onSurface: string;\n  onPrimary: string;\n  onSecondary: string;\n};\n\nconst LightColors = {\n  background: \"#FFFFFF\",\n  surface: \"#FFFFFF\",\n  primary: \"#6200EE\",\n  secondary: \"#03DAC6\",\n  onBackground: \"#000000\",\n  onSurface: \"#000000\",\n  onPrimary: \"#FFFFFF\",\n  onSecondary: \"#000000\",\n};\n\nconst DarkColors = {\n  background: \"#121212\",\n  surface: \"#121212\",\n  primary: \"#BBB6FC\",\n  secondary: \"#03DAC6\",\n  onBackground: \"#FFFFFF\",\n  onSurface: \"#FFFFFF\",\n  onPrimary: \"#000000\",\n  onSecondary: \"#000000\",\n};\n\nexport { LightColors, DarkColors };\n","import { LightColors, DarkColors, Colors } from \"./Colors\";\nimport { DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    theme: string;\n    colors: Colors;\n  }\n}\n\nexport const getTheme = (theme: string): DefaultTheme => {\n  return { theme: theme, colors: theme === \"dark\" ? DarkColors : LightColors };\n};\n","import styled from \"styled-components\";\nimport { Input } from \"./GlobalComponent\";\n\nconst ToolbarNumberInput = styled(Input)`\n  margin: 8px;\n`;\n\nexport default ToolbarNumberInput;\n","export default __webpack_public_path__ + \"static/media/github-logo.d1bb13ce.svg\";","import { useState, useRef, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport {\n  Header,\n  HeaderTitle,\n  Content,\n  Footer,\n  Container,\n  ToolBar,\n  PrimaryButton,\n  FooterTitle,\n  Logo,\n  FooterLinkText,\n  Link,\n} from \"./common/components/GlobalComponent\";\nimport DropdownList from \"./common/components/DropdownList\";\nimport BubbleSortScreen from \"./sort/algorithm/bubble/screens/BubbleSortScreen\";\nimport { getTheme } from \"./styles/Themes\";\nimport {\n  generateRandomNumbers,\n  safeParseInt,\n  getRandomInt,\n} from \"./utils/utils\";\nimport ArrayData from \"./sort/types/ArrayData\";\nimport ToolbarNumberInput from \"./common/components/Input\";\nimport Config from \"./sort/types/Config\";\nimport githubLogo from \"./github-logo.svg\";\nconst data: Config = require(\"./assets/data.json\");\n\nconst App = () => {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const [sortAlgorithmId, setSortAlgorithmId] = useState(\"1\");\n  const [executionDelayInMillis, setExecutionDelayInMillis] = useState(5);\n\n  const [datasetMaxValue, setDatasetMaxValue] = useState(5000);\n  const [datasetLength, setDatasetLength] = useState(50);\n  const [dataset, setDataset] = useState<Array<ArrayData>>([]);\n\n  const [contentHeight, setContentHeight] = useState(0);\n  const [contentWidth, setContentWidth] = useState(0);\n  const contentRef = useRef<HTMLDivElement>(null);\n\n  const [isSortingInProgress, setSortingInProgress] = useState(false);\n\n  useEffect(() => {\n    const height = contentRef?.current?.clientHeight;\n    setContentHeight(height ? height : 0);\n\n    const width = contentRef?.current?.clientWidth;\n    setContentWidth(width ? width : 0);\n\n    setDataset(generateRandomNumbers(datasetMaxValue, datasetLength));\n  }, [contentRef, datasetMaxValue, datasetLength]);\n\n  const toggleTheme = () => {\n    setTheme((currentTheme) => (currentTheme === \"dark\" ? \"light\" : \"dark\"));\n  };\n\n  const generateNewDataset = () => {\n    const maxValue = getRandomInt(data.minDatasetValue, data.maxDatasetValue);\n    const maxSize = getRandomInt(data.minDatasetValue, data.maxDatasetSize);\n\n    setDatasetMaxValue(maxValue);\n    setDatasetLength(maxSize); // will trigger useEffect therefore populate new dataset\n  };\n\n  return (\n    <ThemeProvider theme={getTheme(theme)}>\n      <Container>\n        <Header>\n          <HeaderTitle onClick={toggleTheme}>\n            Sorting algorithem visualizer\n          </HeaderTitle>\n        </Header>\n        <ToolBar>\n          <DropdownList\n            disabled={isSortingInProgress}\n            dropdownList={data.sortAlgorithm}\n            title=\"Select a sorting algorithm\"\n            onChange={setSortAlgorithmId}\n          />\n\n          {!data.showAdvancedControls && (\n            <DropdownList\n              value={executionDelayInMillis.toString()}\n              disabled={isSortingInProgress}\n              dropdownList={data.executionDelayInMilliseconds}\n              title=\"Select a execution delay\"\n              onChange={(ms) => {\n                setExecutionDelayInMillis(safeParseInt(ms, 0));\n              }}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={\"Max value\"}\n              type={\"number\"}\n              maxLength={10}\n              onChange={(e) =>\n                setDatasetMaxValue(\n                  Math.min(safeParseInt(e.target.value), 999999999)\n                )\n              }\n              value={datasetMaxValue}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={\"Number of data\"}\n              type={\"number\"}\n              maxLength={5}\n              onChange={(e) =>\n                setDatasetLength(Math.min(safeParseInt(e.target.value), 99999))\n              }\n              value={datasetLength}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={\"Execution delay in ms\"}\n              type={\"number\"}\n              maxLength={4}\n              onChange={(e) =>\n                setExecutionDelayInMillis(\n                  Math.min(safeParseInt(e.target.value), 9999)\n                )\n              }\n              value={executionDelayInMillis}\n            />\n          )}\n\n          <PrimaryButton\n            onClick={generateNewDataset}\n            disabled={isSortingInProgress}\n          >\n            Generate new dataset\n          </PrimaryButton>\n        </ToolBar>\n        <Content ref={contentRef}>\n          {dataset &&\n            getSortingVisualizerScreen(\n              sortAlgorithmId,\n              dataset,\n              datasetMaxValue,\n              contentHeight,\n              contentWidth,\n              executionDelayInMillis,\n              setSortingInProgress\n            )}\n        </Content>\n\n        <Footer>\n          <Link\n            href=\"https://github.com/half-blood-prince/sorting-visualizer-algorithm\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FooterLinkText>\n              <Logo src={githubLogo}></Logo>\n              <FooterTitle>Source code</FooterTitle>\n            </FooterLinkText>\n          </Link>\n        </Footer>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst getSortingVisualizerScreen = (\n  sortAlgorithmId: string,\n  dataset: Array<ArrayData>,\n  datasetMaxValue: number,\n  height: number,\n  width: number,\n  executionDelayInMillis: number,\n  exectionStatusCallback: (isRunning: boolean) => void\n) => {\n  switch (sortAlgorithmId) {\n    case \"1\":\n      return (\n        <BubbleSortScreen\n          name=\"Bubble sort\"\n          dataset={dataset}\n          screenHeight={height}\n          screenWidth={width}\n          datasetMaxValue={datasetMaxValue}\n          executionDelayInMillis={executionDelayInMillis}\n          exectionStatusCallback={exectionStatusCallback}\n        />\n      );\n    case \"2\":\n      return <HeaderTitle>Selection sort</HeaderTitle>;\n\n    default:\n      return <HeaderTitle>Yet to develop</HeaderTitle>;\n  }\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}