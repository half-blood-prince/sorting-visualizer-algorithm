{"version":3,"sources":["common/components/GlobalComponent.tsx","common/components/DropdownList.tsx","sort/algorithm/bubble/components/VerticalLine.tsx","sort/algorithm/bubble/components/HorizontalList.tsx","utils/utils.ts","sort/algorithm/bubble/useSortAlgorithm.ts","sort/algorithm/bubble/screens/SortScreen.tsx","styles/Colors.ts","styles/Themes.ts","common/components/Input.tsx","github-logo.svg","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Header","header","theme","colors","surface","Content","background","Footer","footer","HeaderTitle","h1","onSurface","ToolBar","DropDown","select","DropDownItem","option","SortVisualizerContainer","Input","input","PrimaryButton","button","primary","onPrimary","FooterLinkText","Logo","img","FooterTitle","Link","a","DropdownList","props","onChange","e","target","value","dropdownList","map","item","key","name","VerticalLine","attrs","height","width","isSelected","style","secondary","HorizontalList","sleep","ms","Promise","resolve","setTimeout","safeParseInt","num","defaultValue","parseInt","getRandomInt","min","max","Math","floor","random","useSortAlgorithm","maxValue","datasetMaxValue","screenHeight","useState","dataset","data","setData","swapIndices","setSwapIndices","isSortingInProgress","setIsSortingInProgress","isComponentActive","useRef","cleanupCallback","useCallback","console","log","current","useEffect","initiateBubbleSort","exectionStatusCallback","swapIndex1","swapIndex2","i","length","isSwapOccured","j","temp","slice","executionDelayInMillis","initiateSelectionSort","minIndex","initiateSort","sortAlgorithmId","SortScreen","index","arr","disabled","onClick","LightColors","onBackground","onSecondary","DarkColors","getTheme","ToolbarNumberInput","require","getSortAlgorithName","id","element","sortAlgorithm","find","toString","App","setTheme","setSortAlgorithmId","setExecutionDelayInMillis","setDatasetMaxValue","datasetLength","setDatasetLength","setDataset","contentHeight","setContentHeight","contentWidth","setContentWidth","contentRef","setSortingInProgress","clientHeight","clientWidth","limit","isNaN","randomArray","Array","generateRandomNumbers","currentTheme","title","showAdvancedControls","executionDelayInMilliseconds","placeholder","type","maxLength","minDatasetValue","maxDatasetValue","maxSize","maxDatasetSize","ref","screenWidth","href","rel","src","githubLogo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k4BAEMA,EAAYC,IAAOC,IAAV,6GAOTC,EAASF,IAAOG,OAAV,sDACU,qBAAGC,MAAkBC,OAAOC,WAG5CC,EAAUP,IAAOC,IAAV,wFACS,qBAAGG,MAAkBC,OAAOG,cAK5CC,EAAST,IAAOU,OAAV,sDACU,qBAAGN,MAAkBC,OAAOC,WAG5CK,EAAcX,IAAOY,GAAV,kEACN,qBAAGR,MAAkBC,OAAOQ,aAIjCC,EAAUd,IAAOC,IAAV,6IACS,qBAAGG,MAAkBC,OAAOC,WAS5CS,EAAWf,IAAOgB,OAAV,qKAIQ,qBAAGZ,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOQ,aAOjCI,EAAejB,IAAOkB,OAAV,0BAEZC,EAA0BnB,IAAOC,IAAV,sGAOvBmB,EAAQpB,IAAOqB,MAAV,oOAIW,qBAAGjB,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOQ,aAG1B,qBAAGT,MAAkBC,OAAOQ,aASnCS,EAAgBtB,IAAOuB,OAAV,sOAIG,qBAAGnB,MAAkBC,OAAOmB,WACvC,qBAAGpB,MAAkBC,OAAOoB,aAWjCC,EAAiB1B,IAAOC,IAAV,iMAad0B,EAAO3B,IAAO4B,IAAV,6DAKJC,EAAc7B,IAAOY,GAAV,2GACN,qBAAGR,MAAkBC,OAAOQ,aAMjCiB,EAAO9B,IAAO+B,EAAV,sD,eClFKC,EAnBgC,SAC7CC,GAEA,OACE,cAAClB,EAAD,2BACMkB,GADN,IAEEC,SAAU,SAACC,GAAO,IAAD,EACf,UAAAF,EAAMC,gBAAN,cAAAD,EAAiBE,EAAEC,OAAOC,QAH9B,SAMGJ,EAAMK,aAAaC,KAAI,SAACC,GAAD,OACtB,cAACvB,EAAD,CAA6BoB,MAAOG,EAAKC,IAAzC,SACGD,EAAKE,MADWF,EAAKC,YCHjBE,EAhBM3C,IAAOC,IAAI2C,OAAM,SAACX,GAAD,MAA8B,CAClEY,OAAQZ,EAAMY,OACdC,MAAOb,EAAMa,MACbC,WAAYd,EAAMc,WAClBC,MAAO,CACLH,OAAQZ,EAAMY,OACdC,MAAOb,EAAMa,UANI9C,CAAH,qHASI,gBAAGI,EAAH,EAAGA,MAAH,SAAU2C,WACf3C,EAAMC,OAAOmB,QAAUpB,EAAMC,OAAO4C,aCPtCC,EATQlD,IAAOC,IAAV,2J,uBCAdkD,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAmBhDI,EAAe,SAACC,GAA2C,IAA9BC,EAA6B,uDAAN,EACxD,IACE,OAAOC,SAASF,GAChB,MAAOtB,GACP,OAAOuB,IAILE,EAAe,SAACC,EAAaC,GACjC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IC6FvCK,GA9GU,SACvBjC,GAEA,IAAMkC,EAAWJ,KAAKD,IAAI7B,EAAMmC,gBAAiBnC,EAAMoC,cAD3B,EAGJC,mBAA2BrC,EAAMsC,SAH7B,mBAGrBC,EAHqB,KAGfC,EAHe,OAKUH,mBAAS,EAAE,GAAI,IALzB,mBAKrBI,EALqB,KAKRC,EALQ,OAO0BL,oBAAS,GAPnC,mBAOrBM,EAPqB,KAOAC,EAPA,KAStBC,EAAoBC,kBAAgB,GAEpCC,EAAkBC,uBAAY,WAClCC,QAAQC,IAAI,6BACZL,EAAkBM,SAAU,IAC3B,IAEHC,qBAAU,WAGR,OAFAZ,EAAQxC,EAAMsC,SACdO,EAAkBM,SAAU,EACrBJ,IACN,CAACA,EAAiB/C,EAAMsC,UAE3B,IAAMe,EAAkB,uCAAG,sCAAAvD,EAAA,sDACzBmD,QAAQC,IAAI,uBAEZlD,EAAMsD,wBAAuB,GAC7BV,GAAuB,GAEnBW,EAAa,EACbC,GAAc,EAETC,EAAI,EATY,YASTA,EAAIlB,EAAKmB,QAAUb,EAAkBM,SAT5B,iBAUnBQ,GAAgB,EACXC,EAAI,EAXU,YAWPA,EAAIrB,EAAKmB,OAAS,GAAKb,EAAkBM,SAXlC,oBAYjBZ,EAAKqB,GAAGrB,KAAOA,EAAKqB,EAAI,GAAGrB,OACvBsB,EAAOtB,EAAKqB,GAClBrB,EAAKqB,GAAKrB,EAAKqB,EAAI,GACnBrB,EAAKqB,EAAI,GAAKC,EAEdF,GAAgB,EAChBJ,EAAaK,EACbJ,EAAaI,EAAI,IAGfD,EAtBiB,wBAuBnBnB,GAAQ,SAAC1C,GAAD,OAAOyC,EAAKuB,WACpBpB,EAAe,CAACa,EAAYC,IAxBT,UAyBbtC,EAAMlB,EAAM+D,wBAzBC,QAW2CH,IAX3C,0BA4BlBD,EA5BkB,qDASqCF,IATrC,uBA+BzBzD,EAAMsD,wBAAuB,GAC7BV,GAAuB,GAhCE,4CAAH,qDAmClBoB,EAAqB,uCAAG,kCAAAlE,EAAA,sDAC5BmD,QAAQC,IAAI,0BAEZlD,EAAMsD,wBAAuB,GAC7BV,GAAuB,GAEda,EAAI,EANe,YAMZA,EAAIlB,EAAKmB,OAAS,GAAKb,EAAkBM,SAN7B,iBAQ1B,IADIc,EAAWR,EACNG,EAAIH,EAAI,EAAGG,EAAIrB,EAAKmB,QAAUb,EAAkBM,QAASS,IAC5DrB,EAAKqB,GAAGrB,KAAOA,EAAK0B,GAAU1B,OAChC0B,EAAWL,GAVW,GAatBK,IAAaR,EAbS,wBAclBI,EAAOtB,EAAKkB,GAClBlB,EAAKkB,GAAKlB,EAAK0B,GACf1B,EAAK0B,GAAYJ,EAEjBrB,GAAQ,SAAC1C,GAAD,OAAOyC,EAAKuB,WACpBpB,EAAe,CAACe,EAAGQ,IAnBK,UAoBlB/C,EAAMlB,EAAM+D,wBApBM,QAMsCN,IANtC,uBAwB5BzD,EAAMsD,wBAAuB,GAC7BV,GAAuB,GAzBK,4CAAH,qDA0C3B,MAAO,CACLsB,aAfmB,WACnB,OAAQlE,EAAMmE,iBACZ,IAAK,cACHd,IACA,MACF,IAAK,iBACHW,IACA,MACF,QACEf,QAAQC,IAAI,oBAOhBX,OACAE,cACAE,sBACAT,aC3EWkC,GAlCI,SAACpE,GAClBiD,QAAQC,IAAI,uBAD6D,MASrEjB,GAAiBjC,GALnBkC,EAJuE,EAIvEA,SACAK,EALuE,EAKvEA,KACAE,EANuE,EAMvEA,YACAE,EAPuE,EAOvEA,oBACAuB,EARuE,EAQvEA,aAGF,OACE,eAAChF,EAAD,WACE,cAAC,EAAD,UACGqD,EAAKjC,KAAI,SAACC,EAAM8D,EAAOC,GAAd,OACR,cAAC,EAAD,CAEE1D,OAASL,EAAKgC,KAAOL,EAAY,IAAM,IACvCrB,MAAO,OACPC,WAAYuD,IAAU5B,EAAY,IAAM4B,IAAU5B,EAAY,IAHzDlC,EAAKC,UAQhB,cAACnB,EAAD,CACEkF,SAAU5B,EACV6B,QAAS,kBAAMN,KAFjB,uBCxBAO,GAAc,CAClBlG,WAAY,UACZF,QAAS,UACTkB,QAAS,UACTyB,UAAW,UACX0D,aAAc,UACd9F,UAAW,UACXY,UAAW,UACXmF,YAAa,WAGTC,GAAa,CACjBrG,WAAY,UACZF,QAAS,UACTkB,QAAS,UACTyB,UAAW,UACX0D,aAAc,UACd9F,UAAW,UACXY,UAAW,UACXmF,YAAa,WCpBFE,GAAW,SAAC1G,GACvB,MAAO,CAAEA,MAAOA,EAAOC,OAAkB,SAAVD,EAAmByG,GAAaH,KCJlDK,GAJY/G,YAAOoB,EAAPpB,CAAH,4CCHT,OAA0B,wCC2BnCwE,GAAewC,EAAQ,IAsJvBC,GAAsB,SAACC,GAC3B,IAAMC,EAAU3C,GAAK4C,cAAcC,MAAK,SAAClF,GAAD,OAAYA,EAAEM,IAAI6E,aAAeJ,KACzE,OAAOC,EAAUA,EAAQzE,KAAO,IAGnB6E,GAzJH,WAAO,IAAD,EACUjD,mBAAS,QADnB,mBACTlE,EADS,KACFoH,EADE,OAG8BlD,mBAAS,eAHvC,mBAGT8B,EAHS,KAGQqB,EAHR,OAI4CnD,mBAAS,GAJrD,mBAIT0B,EAJS,KAIe0B,EAJf,OAM8BpD,mBAAS,KANvC,mBAMTF,EANS,KAMQuD,EANR,OAO0BrD,mBAAS,IAPnC,mBAOTsD,EAPS,KAOMC,EAPN,OAQcvD,mBAA2B,IARzC,mBAQTC,EARS,KAQAuD,EARA,OAU0BxD,mBAAS,GAVnC,mBAUTyD,EAVS,KAUMC,EAVN,OAWwB1D,mBAAS,GAXjC,mBAWT2D,EAXS,KAWKC,EAXL,KAYVC,EAAapD,iBAAuB,MAZ1B,EAcoCT,oBAAS,GAd7C,mBAcTM,EAdS,KAcYwD,GAdZ,KAgBhB/C,qBAAU,WAAO,IAAD,IACRxC,EAAM,OAAGsF,QAAH,IAAGA,GAAH,UAAGA,EAAY/C,eAAf,aAAG,EAAqBiD,aACpCL,EAAiBnF,GAAkB,GAEnC,IAAMC,EAAK,OAAGqF,QAAH,IAAGA,GAAH,UAAGA,EAAY/C,eAAf,aAAG,EAAqBkD,YACnCJ,EAAgBpF,GAAgB,GAEhCgF,EP9C0B,SAC5BhE,EACAyE,GAEA,GAAIzE,GAAO,GAAKyE,GAAS,GAAKC,MAAM1E,IAAQ0E,MAAMD,GAAQ,MAAO,GAGjE,IADA,IAAME,EAAc,IAAIC,MAAiBH,GAChC7C,EAAI,EAAGA,EAAI6C,EAAO7C,IACzB+C,EAAY/C,GAAK,CACflB,KAAMT,KAAKC,MAAMD,KAAKE,SAAWH,GACjCrB,IAAKiD,EAAE4B,YAGX,OAAOmB,EOiCME,CAAsBvE,EAAiBwD,MACjD,CAACO,EAAY/D,EAAiBwD,EAAexB,IAchD,OACE,cAAC,IAAD,CAAehG,MAAO0G,GAAS1G,GAA/B,SACE,eAACL,EAAD,WACE,cAACG,EAAD,UACE,cAACS,EAAD,CAAa8F,QAhBD,WAClBe,GAAS,SAACoB,GAAD,MAAoC,SAAjBA,EAA0B,QAAU,WAe1D,6CAIF,eAAC9H,EAAD,WACE,cAAC,EAAD,CACE0F,SAAU5B,EACVtC,aAAckC,GAAK4C,cACnByB,MAAM,6BACN3G,SAAUuF,KAGVjD,GAAKsE,sBACL,cAAC,EAAD,CACEzG,MAAO2D,EAAuBsB,WAC9Bd,SAAU5B,EACVtC,aAAckC,GAAKuE,6BACnBF,MAAM,2BACN3G,SAAU,SAACkB,GACTsE,EAA0BlE,EAAaJ,EAAI,OAKhDoB,GAAKsE,sBACJ,cAAC,GAAD,CACEtC,SAAU5B,EACVoE,YAAa,YACbC,KAAM,SACNC,UAAW,GACXhH,SAAU,SAACC,GAAD,OACRwF,EACE5D,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,aAG3CA,MAAO+B,IAIVI,GAAKsE,sBACJ,cAAC,GAAD,CACEtC,SAAU5B,EACVoE,YAAa,iBACbC,KAAM,SACNC,UAAW,EACXhH,SAAU,SAACC,GAAD,OACR0F,EAAiB9D,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,SAE1DA,MAAOuF,IAIVpD,GAAKsE,sBACJ,cAAC,GAAD,CACEtC,SAAU5B,EACVoE,YAAa,wBACbC,KAAM,SACNC,UAAW,EACXhH,SAAU,SAACC,GAAD,OACRuF,EACE3D,KAAKF,IAAIL,EAAarB,EAAEC,OAAOC,OAAQ,QAG3CA,MAAO2D,IAIX,cAAC1E,EAAD,CACEmF,QAhFiB,WACzB,IAAMtC,EAAWP,EAAaY,GAAK2E,gBAAiB3E,GAAK4E,iBACnDC,EAAUzF,EAAaY,GAAK2E,gBAAiB3E,GAAK8E,gBAExD3B,EAAmBxD,GACnB0D,EAAiBwB,IA4ET7C,SAAU5B,EAFZ,qCAOF,cAACrE,EAAD,CAASgJ,IAAKpB,EAAd,SACG5D,GACC,cAAC,GAAD,CACE7B,KAAMuE,GAAoBb,GAC1BA,gBAAiBA,EACjB7B,QAASA,EACTF,aAAc0D,EACdyB,YAAavB,EACb7D,gBAAiBA,EACjB4B,uBAAwBA,EACxBT,uBAAwB6C,OAK9B,cAAC3H,EAAD,UACE,cAACqB,EAAD,CACE2H,KAAK,oEACLrH,OAAO,SACPsH,IAAI,sBAHN,SAKE,eAAChI,EAAD,WACE,cAACC,EAAD,CAAMgI,IAAKC,KACX,cAAC/H,EAAD,uCC1JCgI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.1cb6e85c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst Header = styled.header`\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst Content = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  flex: 1;\n  flex-flow: column;\n`;\n\nconst Footer = styled.footer`\n  background-color: ${({ theme }) => theme.colors.surface};\n`;\n\nconst HeaderTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.onSurface};\n  text-align: center;\n`;\n\nconst ToolBar = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  flex-direction: row;\n  display: flex;\n\n  align-items: center;\n\n  padding: 8px;\n`;\n\nconst DropDown = styled.select`\n  padding: 8px;\n  font-size: 16px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  outline: none;\n\n  :hover {\n    opacity: 0.85;\n  }\n`;\nconst DropDownItem = styled.option``;\n\nconst SortVisualizerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst Input = styled.input`\n  font-size: 16px;\n  padding: 8px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  border-width: 1px;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.onSurface};\n  }\n  :hover {\n    opacity: 0.85;\n  }\n\n  outline: none;\n`;\n\nconst PrimaryButton = styled.button`\n  font-size: 16px;\n  padding: 8px;\n  min-width: 75px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.onPrimary};\n\n  :hover {\n    opacity: 0.85;\n  }\n  :disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst FooterLinkText = styled.div`\n  flex-direction: row;\n  display: flexbox;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  padding: 8px;\n\n  :hover {\n    opacity: 0.85;\n  }\n`;\n\nconst Logo = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst FooterTitle = styled.h1`\n  color: ${({ theme }) => theme.colors.onSurface};\n  font-size: 18px;\n  text-align: center;\n  margin-left: 8px;\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n`;\n\nexport {\n  Container,\n  Header,\n  HeaderTitle,\n  Content,\n  Footer,\n  ToolBar,\n  DropDown,\n  DropDownItem,\n  SortVisualizerContainer,\n  Input,\n  PrimaryButton,\n  Logo,\n  FooterTitle,\n  FooterLinkText,\n  Link,\n};\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { DropDown, DropDownItem } from \"./GlobalComponent\";\n\ntype Item = {\n  key: string;\n  name: string;\n};\n\ntype Props = {\n  disabled: boolean;\n  dropdownList: Array<Item>;\n  title?: string;\n  value?: string;\n  onChange?: (id: string) => void | null;\n};\n\nconst DropdownList: FunctionComponent<Props> = (\n  props: PropsWithChildren<Props>\n) => {\n  return (\n    <DropDown\n      {...props}\n      onChange={(e) => {\n        props.onChange?.(e.target.value);\n      }}\n    >\n      {props.dropdownList.map((item) => (\n        <DropDownItem key={item.key} value={item.key}>\n          {item.name}\n        </DropDownItem>\n      ))}\n    </DropDown>\n  );\n};\n\nexport default DropdownList;\n","import styled from \"styled-components\";\n\ntype VerticalLineProp = {\n  height: any;\n  width: any;\n  isSelected: boolean;\n};\n\nconst VerticalLine = styled.div.attrs((props: VerticalLineProp) => ({\n  height: props.height,\n  width: props.width,\n  isSelected: props.isSelected,\n  style: {\n    height: props.height,\n    width: props.width,\n  },\n}))`\n  background-color: ${({ theme, isSelected }) =>\n    isSelected ? theme.colors.primary : theme.colors.secondary};\n  margin-left: 0.1%;\n  margin-right: 0.1%;\n  display: flex;\n`;\n\nexport default VerticalLine;\n","import styled from \"styled-components\";\n\nconst HorizontalList = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nexport default HorizontalList;\n","import ArrayData from \"../sort/types/ArrayData\";\n\nconst sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst generateRandomNumbers = (\n  max: number,\n  limit: number\n): Array<ArrayData> => {\n  if (max <= 0 || limit <= 0 || isNaN(max) || isNaN(limit)) return [];\n\n  const randomArray = new Array<ArrayData>(limit);\n  for (let i = 0; i < limit; i++) {\n    randomArray[i] = {\n      data: Math.floor(Math.random() * max),\n      key: i.toString(),\n    };\n  }\n  return randomArray;\n};\n\nconst safeParseInt = (num: string, defaultValue: number = 0) => {\n  try {\n    return parseInt(num);\n  } catch (e: any) {\n    return defaultValue;\n  }\n};\n\nconst getRandomInt = (min: number, max: number): number => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport { sleep, generateRandomNumbers, safeParseInt, getRandomInt };\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { sleep } from '../../../utils/utils'\nimport ArrayData from '../../types/ArrayData'\n\nimport SortVisualizerScreenProp from '../../types/SortVisualizerScreenProp'\n\ntype SortAlgorithmReturnType = {\n  initiateSort: Function\n  data: Array<ArrayData>\n  swapIndices: Array<number>\n  isSortingInProgress: boolean\n  maxValue: number\n}\n\nconst useSortAlgorithm = (\n  props: SortVisualizerScreenProp,\n): SortAlgorithmReturnType => {\n  const maxValue = Math.max(props.datasetMaxValue, props.screenHeight)\n\n  const [data, setData] = useState<Array<ArrayData>>(props.dataset)\n\n  const [swapIndices, setSwapIndices] = useState([-1, -1])\n\n  const [isSortingInProgress, setIsSortingInProgress] = useState(false)\n\n  const isComponentActive = useRef<boolean>(false)\n\n  const cleanupCallback = useCallback(() => {\n    console.log('Cleaning up * sort screen')\n    isComponentActive.current = false\n  }, [])\n\n  useEffect(() => {\n    setData(props.dataset)\n    isComponentActive.current = true\n    return cleanupCallback\n  }, [cleanupCallback, props.dataset])\n\n  const initiateBubbleSort = async () => {\n    console.log('Running bubble sort')\n\n    props.exectionStatusCallback(true)\n    setIsSortingInProgress(true)\n\n    let swapIndex1 = 1\n    let swapIndex2 = -1\n\n    for (let i = 0; i < data.length && isComponentActive.current; i++) {\n      let isSwapOccured = false\n      for (let j = 0; j < data.length - 1 && isComponentActive.current; j++) {\n        if (data[j].data > data[j + 1].data) {\n          const temp = data[j]\n          data[j] = data[j + 1]\n          data[j + 1] = temp\n\n          isSwapOccured = true\n          swapIndex1 = j\n          swapIndex2 = j + 1\n        }\n\n        if (isSwapOccured) {\n          setData((a) => data.slice())\n          setSwapIndices([swapIndex1, swapIndex2])\n          await sleep(props.executionDelayInMillis)\n        }\n      }\n      if (!isSwapOccured) break\n    }\n\n    props.exectionStatusCallback(false)\n    setIsSortingInProgress(false)\n  }\n\n  const initiateSelectionSort = async () => {\n    console.log('Running selection sort')\n\n    props.exectionStatusCallback(true)\n    setIsSortingInProgress(true)\n\n    for (let i = 0; i < data.length - 1 && isComponentActive.current; i++) {\n      let minIndex = i\n      for (let j = i + 1; j < data.length && isComponentActive.current; j++) {\n        if (data[j].data < data[minIndex].data) {\n          minIndex = j\n        }\n      }\n      if (minIndex !== i) {\n        const temp = data[i]\n        data[i] = data[minIndex]\n        data[minIndex] = temp\n\n        setData((a) => data.slice())\n        setSwapIndices([i, minIndex])\n        await sleep(props.executionDelayInMillis)\n      }\n    }\n\n    props.exectionStatusCallback(false)\n    setIsSortingInProgress(false)\n  }\n\n  const initiateSort = () => {\n    switch (props.sortAlgorithmId) {\n      case 'bubble_sort':\n        initiateBubbleSort()\n        break\n      case 'selection_sort':\n        initiateSelectionSort()\n        break\n      default:\n        console.log('Unknow sort id')\n        break\n    }\n  }\n\n  return {\n    initiateSort,\n    data,\n    swapIndices,\n    isSortingInProgress,\n    maxValue,\n  }\n}\n\nexport default useSortAlgorithm\n","import React, { PropsWithChildren } from 'react'\n\nimport VerticalLine from '../components/VerticalLine'\nimport HorizontalList from '../components/HorizontalList'\nimport {\n  PrimaryButton,\n  SortVisualizerContainer,\n} from '../../../../common/components/GlobalComponent'\nimport SortVisualizerScreenProp from '../../../types/SortVisualizerScreenProp'\nimport useSortAlgorithm from '../useSortAlgorithm'\n\nconst SortScreen = (props: PropsWithChildren<SortVisualizerScreenProp>) => {\n  console.log('Component re-render')\n\n  const {\n    maxValue,\n    data,\n    swapIndices,\n    isSortingInProgress,\n    initiateSort,\n  } = useSortAlgorithm(props)\n\n  return (\n    <SortVisualizerContainer>\n      <HorizontalList>\n        {data.map((item, index, arr) => (\n          <VerticalLine\n            key={item.key}\n            height={(item.data / maxValue) * 100 + '%'}\n            width={'50px'}\n            isSelected={index === swapIndices[0] || index === swapIndices[1]}\n          />\n        ))}\n      </HorizontalList>\n\n      <PrimaryButton\n        disabled={isSortingInProgress}\n        onClick={() => initiateSort()}\n      >\n        Start\n      </PrimaryButton>\n    </SortVisualizerContainer>\n  )\n}\n\nexport default SortScreen\n","export type Colors = {\n  background: string;\n  surface: string;\n  primary: string;\n  secondary: string;\n  onBackground: string;\n  onSurface: string;\n  onPrimary: string;\n  onSecondary: string;\n};\n\nconst LightColors = {\n  background: \"#FFFFFF\",\n  surface: \"#FFFFFF\",\n  primary: \"#6200EE\",\n  secondary: \"#03DAC6\",\n  onBackground: \"#000000\",\n  onSurface: \"#000000\",\n  onPrimary: \"#FFFFFF\",\n  onSecondary: \"#000000\",\n};\n\nconst DarkColors = {\n  background: \"#121212\",\n  surface: \"#121212\",\n  primary: \"#BBB6FC\",\n  secondary: \"#03DAC6\",\n  onBackground: \"#FFFFFF\",\n  onSurface: \"#FFFFFF\",\n  onPrimary: \"#000000\",\n  onSecondary: \"#000000\",\n};\n\nexport { LightColors, DarkColors };\n","import { LightColors, DarkColors, Colors } from \"./Colors\";\nimport { DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    theme: string;\n    colors: Colors;\n  }\n}\n\nexport const getTheme = (theme: string): DefaultTheme => {\n  return { theme: theme, colors: theme === \"dark\" ? DarkColors : LightColors };\n};\n","import styled from \"styled-components\";\nimport { Input } from \"./GlobalComponent\";\n\nconst ToolbarNumberInput = styled(Input)`\n  margin: 8px;\n`;\n\nexport default ToolbarNumberInput;\n","export default __webpack_public_path__ + \"static/media/github-logo.d1bb13ce.svg\";","import { useState, useRef, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport {\n  Header,\n  HeaderTitle,\n  Content,\n  Footer,\n  Container,\n  ToolBar,\n  PrimaryButton,\n  FooterTitle,\n  Logo,\n  FooterLinkText,\n  Link,\n} from './common/components/GlobalComponent'\nimport DropdownList from './common/components/DropdownList'\nimport SortScreen from './sort/algorithm/bubble/screens/SortScreen'\nimport { getTheme } from './styles/Themes'\nimport {\n  generateRandomNumbers,\n  safeParseInt,\n  getRandomInt,\n} from './utils/utils'\nimport ArrayData from './sort/types/ArrayData'\nimport ToolbarNumberInput from './common/components/Input'\nimport Config from './sort/types/Config'\nimport githubLogo from './github-logo.svg'\nconst data: Config = require('./assets/data.json')\n\nconst App = () => {\n  const [theme, setTheme] = useState('dark')\n\n  const [sortAlgorithmId, setSortAlgorithmId] = useState('bubble_sort')\n  const [executionDelayInMillis, setExecutionDelayInMillis] = useState(5)\n\n  const [datasetMaxValue, setDatasetMaxValue] = useState(5000)\n  const [datasetLength, setDatasetLength] = useState(50)\n  const [dataset, setDataset] = useState<Array<ArrayData>>([])\n\n  const [contentHeight, setContentHeight] = useState(0)\n  const [contentWidth, setContentWidth] = useState(0)\n  const contentRef = useRef<HTMLDivElement>(null)\n\n  const [isSortingInProgress, setSortingInProgress] = useState(false)\n\n  useEffect(() => {\n    const height = contentRef?.current?.clientHeight\n    setContentHeight(height ? height : 0)\n\n    const width = contentRef?.current?.clientWidth\n    setContentWidth(width ? width : 0)\n\n    setDataset(generateRandomNumbers(datasetMaxValue, datasetLength))\n  }, [contentRef, datasetMaxValue, datasetLength, sortAlgorithmId])\n\n  const toggleTheme = () => {\n    setTheme((currentTheme) => (currentTheme === 'dark' ? 'light' : 'dark'))\n  }\n\n  const generateNewDataset = () => {\n    const maxValue = getRandomInt(data.minDatasetValue, data.maxDatasetValue)\n    const maxSize = getRandomInt(data.minDatasetValue, data.maxDatasetSize)\n\n    setDatasetMaxValue(maxValue)\n    setDatasetLength(maxSize) // will trigger useEffect therefore populate new dataset\n  }\n\n  return (\n    <ThemeProvider theme={getTheme(theme)}>\n      <Container>\n        <Header>\n          <HeaderTitle onClick={toggleTheme}>\n            Sorting algorithem visualizer\n          </HeaderTitle>\n        </Header>\n        <ToolBar>\n          <DropdownList\n            disabled={isSortingInProgress}\n            dropdownList={data.sortAlgorithm}\n            title=\"Select a sorting algorithm\"\n            onChange={setSortAlgorithmId}\n          />\n\n          {!data.showAdvancedControls && (\n            <DropdownList\n              value={executionDelayInMillis.toString()}\n              disabled={isSortingInProgress}\n              dropdownList={data.executionDelayInMilliseconds}\n              title=\"Select a execution delay\"\n              onChange={(ms) => {\n                setExecutionDelayInMillis(safeParseInt(ms, 0))\n              }}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={'Max value'}\n              type={'number'}\n              maxLength={10}\n              onChange={(e) =>\n                setDatasetMaxValue(\n                  Math.min(safeParseInt(e.target.value), 999999999),\n                )\n              }\n              value={datasetMaxValue}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={'Number of data'}\n              type={'number'}\n              maxLength={5}\n              onChange={(e) =>\n                setDatasetLength(Math.min(safeParseInt(e.target.value), 99999))\n              }\n              value={datasetLength}\n            />\n          )}\n\n          {data.showAdvancedControls && (\n            <ToolbarNumberInput\n              disabled={isSortingInProgress}\n              placeholder={'Execution delay in ms'}\n              type={'number'}\n              maxLength={4}\n              onChange={(e) =>\n                setExecutionDelayInMillis(\n                  Math.min(safeParseInt(e.target.value), 9999),\n                )\n              }\n              value={executionDelayInMillis}\n            />\n          )}\n\n          <PrimaryButton\n            onClick={generateNewDataset}\n            disabled={isSortingInProgress}\n          >\n            Generate new dataset\n          </PrimaryButton>\n        </ToolBar>\n        <Content ref={contentRef}>\n          {dataset && (\n            <SortScreen\n              name={getSortAlgorithName(sortAlgorithmId)}\n              sortAlgorithmId={sortAlgorithmId}\n              dataset={dataset}\n              screenHeight={contentHeight}\n              screenWidth={contentWidth}\n              datasetMaxValue={datasetMaxValue}\n              executionDelayInMillis={executionDelayInMillis}\n              exectionStatusCallback={setSortingInProgress}\n            />\n          )}\n        </Content>\n\n        <Footer>\n          <Link\n            href=\"https://github.com/half-blood-prince/sorting-visualizer-algorithm\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FooterLinkText>\n              <Logo src={githubLogo}></Logo>\n              <FooterTitle>Source code</FooterTitle>\n            </FooterLinkText>\n          </Link>\n        </Footer>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nconst getSortAlgorithName = (id: string): string => {\n  const element = data.sortAlgorithm.find((e: any) => e.key.toString() === id)\n  return element ? element.name : ''\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Main\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}