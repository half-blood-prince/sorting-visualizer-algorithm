{"version":3,"sources":["assets/github-logo.svg","common/components/GlobalComponent.tsx","common/components/DropdownList.tsx","sort/algorithm/components/VerticalLine.tsx","sort/algorithm/components/HorizontalList.tsx","utils/utils.ts","sort/algorithm/useSortAlgorithm.ts","sort/algorithm/screens/SortScreen.tsx","styles/Colors.ts","common/components/Input.tsx","common/components/ThemeModeIcon.tsx","Main.tsx","styles/Themes.ts","reportWebVitals.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","SvgGithubLogo","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","Container","styled","div","Header","header","theme","colors","surface","Content","background","H1","h1","HeaderTitle","onSurface","ToolBar","FieldSet","fieldset","onBackground","FieldSetLegend","legend","DropDown","select","DropDownItem","option","SortVisualizerContainer","Input","input","PrimaryButton","button","ThemeLogo","GithubIcon","GithubLogo","Link","a","DropdownList","onChange","e","value","dropdownList","map","item","name","VerticalLine","attrs","isSelected","primary","secondary","HorizontalList","sleep","ms","Promise","resolve","setTimeout","safeParseInt","num","defaultValue","parseInt","getRandomInt","min","max","Math","floor","random","useSortAlgorithm","maxValue","datasetMaxValue","screenHeight","useState","dataset","data","setData","swapIndices","setSwapIndices","isSortingInProgress","setIsSortingInProgress","isComponentActive","useRef","cleanupCallback","useCallback","console","log","current","useEffect","initiateBubbleSort","exectionStatusCallback","swapIndex1","swapIndex2","isSwapOccured","j","temp","slice","executionDelayInMillis","initiateSelectionSort","minIndex","initiateSort","sortAlgorithmId","SortScreen","index","arr","disabled","onClick","LightColors","onPrimary","onSecondary","DarkColors","ToolbarNumberInput","ThemeModeIcon","fillColor","themeMode","size","fill","require","getSortAlgorithName","element","sortAlgorithm","find","toString","App","setThemeMode","setSortAlgorithmId","setExecutionDelayInMillis","setDatasetMaxValue","datasetLength","setDatasetLength","setDataset","contentHeight","setContentHeight","contentWidth","setContentWidth","contentRef","setSortingInProgress","clientHeight","clientWidth","limit","isNaN","randomArray","Array","generateRandomNumbers","currentTheme","href","rel","showAdvancedControls","executionDelayInMilliseconds","placeholder","type","maxLength","minDatasetValue","maxDatasetValue","maxSize","maxDatasetSize","screenWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m3BAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAI,EAAqB,gBAAoB,IAAK,KAAmB,gBAAoB,OAAQ,CAC/FoB,EAAG,mpEAGDC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAqB,gBAAoB,IAAK,MAE9CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAE/CC,EAAsB,gBAAoB,IAAK,MAEnD,SAASC,EAAcC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQ9B,EAAyB0B,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxC,EAAS,CACtD6C,GAAI,SACJC,MAAO,6BACPC,WAAY,+BACZC,EAAG,MACHC,EAAG,MACHC,MAAO,YACPC,OAAQ,YACRC,QAAS,sBACTC,MAAO,CACLC,iBAAkB,2BAEpBC,SAAU,WACVC,IAAKf,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAM,EAAOlB,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,GAGpI,I,sCAAImB,EAA0B,aAAiBlB,GChEzCmB,GDiES,ICjEGC,IAAOC,IAAV,8GAOTC,EAASF,IAAOG,OAAV,oJACU,qBAAGC,MAAkBC,OAAOC,WAO5CC,EAAUP,IAAOC,IAAV,wFACS,qBAAGG,MAAkBC,OAAOG,cAK5CC,EAAKT,IAAOU,GAAV,gJASFC,EAAcX,YAAOS,EAAPT,CAAH,0GACN,qBAAGI,MAAkBC,OAAOO,aAMjCC,GAAUb,IAAOC,IAAV,6FACS,qBAAGG,MAAkBC,OAAOC,WAK5CQ,GAAWd,IAAOe,SAAV,mPACQ,qBAAGX,MAAkBC,OAAOG,cAIhC,qBAAGJ,MAAkBC,OAAOW,gBAQxCC,GAAiBjB,IAAOkB,OAAV,0FACE,qBAAGd,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOO,aAIjCO,GAAWnB,IAAOoB,OAAV,4LAIQ,qBAAGhB,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOO,aASjCS,GAAerB,IAAOsB,OAAV,0BAEZC,GAA0BvB,IAAOC,IAAV,sGAOvBuB,GAAQxB,IAAOyB,MAAV,oOAIW,qBAAGrB,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOO,aAG1B,qBAAGR,MAAkBC,OAAOO,aASnCc,GAAgB1B,IAAO2B,OAAV,+PAIG,qBAAGvB,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOO,aAajCgB,GAAY5B,IAAOC,IAAV,yHAQT4B,GAAa7B,YAAO8B,EAAP9B,CAAH,uHASV+B,GAAO/B,IAAOgC,EAAV,sD,iBCzGKC,GAnBgC,SAC7ChD,GAEA,OACE,eAACkC,GAAD,6BACMlC,GADN,IAEEiD,SAAU,SAACC,GAAO,IAAD,EACf,UAAAlD,EAAMiD,gBAAN,cAAAjD,EAAiBkD,EAAE3F,OAAO4F,QAH9B,SAMGnD,EAAMoD,aAAaC,KAAI,SAACC,GAAD,OACtB,eAAClB,GAAD,CAA6Be,MAAOG,EAAK1F,IAAzC,SACG0F,EAAKC,MADWD,EAAK1F,YCHjB4F,GAhBMzC,IAAOC,IAAIyC,OAAM,SAACzD,GAAD,MAA8B,CAClEO,OAAQP,EAAMO,OACdD,MAAON,EAAMM,MACboD,WAAY1D,EAAM0D,WAClBjD,MAAO,CACLF,OAAQP,EAAMO,OACdD,MAAON,EAAMM,UANIS,CAAH,qHASI,gBAAGI,EAAH,EAAGA,MAAH,SAAUuC,WACfvC,EAAMC,OAAOuC,QAAUxC,EAAMC,OAAOwC,aCPtCC,GATQ9C,IAAOC,IAAV,2J,2BCAd8C,GAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAmBhDI,GAAe,SAACC,GAA2C,IAA9BC,EAA6B,uDAAN,EACxD,IACE,OAAOC,SAASF,GAChB,MAAOlB,GACP,OAAOmB,IAILE,GAAe,SAACC,EAAaC,GACjC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IC6FvCK,GA9GU,SACvB7E,GAEA,IAAM8E,EAAWJ,KAAKD,IAAIzE,EAAM+E,gBAAiB/E,EAAMgF,cAD3B,EAGJC,mBAA2BjF,EAAMkF,SAH7B,mBAGrBC,EAHqB,KAGfC,EAHe,OAKUH,mBAAS,EAAE,GAAI,IALzB,mBAKrBI,EALqB,KAKRC,EALQ,OAO0BL,oBAAS,GAPnC,mBAOrBM,EAPqB,KAOAC,EAPA,KAStBC,EAAoBC,kBAAgB,GAEpCC,EAAkBC,uBAAY,WAClCC,QAAQC,IAAI,6BACZL,EAAkBM,SAAU,IAC3B,IAEHC,qBAAU,WAGR,OAFAZ,EAAQpF,EAAMkF,SACdO,EAAkBM,SAAU,EACrBJ,IACN,CAACA,EAAiB3F,EAAMkF,UAE3B,IAAMe,EAAkB,yCAAG,uCAAAlD,EAAA,sDACzB8C,QAAQC,IAAI,uBAEZ9F,EAAMkG,wBAAuB,GAC7BV,GAAuB,GAEnBW,EAAa,EACbC,GAAc,EAET5I,EAAI,EATY,YASTA,EAAI2H,EAAKzH,QAAU+H,EAAkBM,SAT5B,iBAUnBM,GAAgB,EACXC,EAAI,EAXU,YAWPA,EAAInB,EAAKzH,OAAS,GAAK+H,EAAkBM,SAXlC,oBAYjBZ,EAAKmB,GAAGnB,KAAOA,EAAKmB,EAAI,GAAGnB,OACvBoB,EAAOpB,EAAKmB,GAClBnB,EAAKmB,GAAKnB,EAAKmB,EAAI,GACnBnB,EAAKmB,EAAI,GAAKC,EAEdF,GAAgB,EAChBF,EAAaG,EACbF,EAAaE,EAAI,IAGfD,EAtBiB,wBAuBnBjB,GAAQ,SAACrC,GAAD,OAAOoC,EAAKqB,WACpBlB,EAAe,CAACa,EAAYC,IAxBT,UAyBbtC,GAAM9D,EAAMyG,wBAzBC,QAW2CH,IAX3C,0BA4BlBD,EA5BkB,qDASqC7I,IATrC,uBA+BzBwC,EAAMkG,wBAAuB,GAC7BV,GAAuB,GAhCE,4CAAH,qDAmClBkB,EAAqB,yCAAG,mCAAA3D,EAAA,sDAC5B8C,QAAQC,IAAI,0BAEZ9F,EAAMkG,wBAAuB,GAC7BV,GAAuB,GAEdhI,EAAI,EANe,YAMZA,EAAI2H,EAAKzH,OAAS,GAAK+H,EAAkBM,SAN7B,iBAQ1B,IADIY,EAAWnJ,EACN8I,EAAI9I,EAAI,EAAG8I,EAAInB,EAAKzH,QAAU+H,EAAkBM,QAASO,IAC5DnB,EAAKmB,GAAGnB,KAAOA,EAAKwB,GAAUxB,OAChCwB,EAAWL,GAVW,GAatBK,IAAanJ,EAbS,wBAclB+I,EAAOpB,EAAK3H,GAClB2H,EAAK3H,GAAK2H,EAAKwB,GACfxB,EAAKwB,GAAYJ,EAEjBnB,GAAQ,SAACrC,GAAD,OAAOoC,EAAKqB,WACpBlB,EAAe,CAAC9H,EAAGmJ,IAnBK,UAoBlB7C,GAAM9D,EAAMyG,wBApBM,QAMsCjJ,IANtC,uBAwB5BwC,EAAMkG,wBAAuB,GAC7BV,GAAuB,GAzBK,4CAAH,qDA0C3B,MAAO,CACLoB,aAfmB,WACnB,OAAQ5G,EAAM6G,iBACZ,IAAK,cACHZ,IACA,MACF,IAAK,iBACHS,IACA,MACF,QACEb,QAAQC,IAAI,oBAOhBX,OACAE,cACAE,sBACAT,aC3EWgC,GAlCI,SAAC9G,GAClB6F,QAAQC,IAAI,uBAD6D,MASrEjB,GAAiB7E,GALnB8E,EAJuE,EAIvEA,SACAK,EALuE,EAKvEA,KACAE,EANuE,EAMvEA,YACAE,EAPuE,EAOvEA,oBACAqB,EARuE,EAQvEA,aAGF,OACE,gBAACtE,GAAD,WACE,eAAC,GAAD,UACG6C,EAAK9B,KAAI,SAACC,EAAMyD,EAAOC,GAAd,OACR,eAAC,GAAD,CAEEzG,OAAS+C,EAAK6B,KAAOL,EAAY,IAAM,IACvCxE,MAAO,OACPoD,WAAYqD,IAAU1B,EAAY,IAAM0B,IAAU1B,EAAY,IAHzD/B,EAAK1F,UAQhB,eAAC6E,GAAD,CACEwE,SAAU1B,EACV2B,QAAS,kBAAMN,KAFjB,uBCxBAO,GAAc,CAClB5F,WAAY,UACZF,QAAS,UACTsC,QAAS,UACTC,UAAW,UACX7B,aAAc,UACdJ,UAAW,UACXyF,UAAW,UACXC,YAAa,WAGTC,GAAa,CACjB/F,WAAY,UACZF,QAAS,UACTsC,QAAS,UACTC,UAAW,UACX7B,aAAc,YACdJ,UAAW,YACXyF,UAAW,UACXC,YAAa,WCvBAE,GAJYxG,YAAOwB,GAAPxB,CAAH,4C,SCsBTyG,GAfiC,SAC9CxH,GACI,IACIyH,EAAkCzH,EAAlCyH,UAAWC,EAAuB1H,EAAvB0H,UAAWR,EAAYlH,EAAZkH,QAC9B,OACE,eAACvE,GAAD,CAAWuE,QAASA,EAApB,SACiB,SAAdQ,EACC,eAAC,KAAD,CAAQC,KAAM,GAAIC,KAAMH,IAExB,eAAC,KAAD,CAAOE,KAAM,GAAIC,KAAMH,OCOzBtC,GAAe0C,EAAQ,IAwJvBC,GAAsB,SAAC7H,GAC3B,IAAM8H,EAAU5C,GAAK6C,cAAcC,MAAK,SAAC/E,GAAD,OAAYA,EAAEtF,IAAIsK,aAAejI,KACzE,OAAO8H,EAAUA,EAAQxE,KAAO,IAGnB4E,GA3JH,WAAO,IAAD,EACkBlD,mBAAS,QAD3B,mBACTyC,EADS,KACEU,EADF,OAG8BnD,mBAAS,eAHvC,mBAGT4B,EAHS,KAGQwB,EAHR,OAI4CpD,mBAAS,GAJrD,mBAITwB,EAJS,KAIe6B,EAJf,OAM8BrD,mBAAS,KANvC,mBAMTF,EANS,KAMQwD,EANR,OAO0BtD,mBAAS,IAPnC,mBAOTuD,EAPS,KAOMC,EAPN,OAQcxD,mBAA2B,IARzC,mBAQTC,EARS,KAQAwD,EARA,OAU0BzD,mBAAS,GAVnC,mBAUT0D,EAVS,KAUMC,EAVN,OAWwB3D,mBAAS,GAXjC,mBAWT4D,EAXS,KAWKC,EAXL,KAYVC,EAAarD,iBAAuB,MAZ1B,EAcoCT,oBAAS,GAd7C,mBAcTM,EAdS,KAcYyD,EAdZ,KAgBhBhD,qBAAU,WAAO,IAAD,IACRzF,EAAM,OAAGwI,QAAH,IAAGA,GAAH,UAAGA,EAAYhD,eAAf,aAAG,EAAqBkD,aACpCL,EAAiBrI,GAAkB,GAEnC,IAAMD,EAAK,OAAGyI,QAAH,IAAGA,GAAH,UAAGA,EAAYhD,eAAf,aAAG,EAAqBmD,YACnCJ,EAAgBxI,GAAgB,GAEhCoI,EN7C0B,SAC5BjE,EACA0E,GAEA,GAAI1E,GAAO,GAAK0E,GAAS,GAAKC,MAAM3E,IAAQ2E,MAAMD,GAAQ,MAAO,GAGjE,IADA,IAAME,EAAc,IAAIC,MAAiBH,GAChC3L,EAAI,EAAGA,EAAI2L,EAAO3L,IACzB6L,EAAY7L,GAAK,CACf2H,KAAMT,KAAKC,MAAMD,KAAKE,SAAWH,GACjC7G,IAAKJ,EAAE0K,YAGX,OAAOmB,EMgCME,CAAsBxE,EAAiByD,MACjD,CAACO,EAAYhE,EAAiByD,EAAe3B,IAEhD,IC5CuB1F,EDwDjBqI,ECvDC,CAAErI,MADcA,EDwDOuG,ECvDPtG,OAAkB,SAAVD,EAAmBmG,GAAaH,IDyD/D,OACE,eAAC,IAAD,CAAehG,MAAOqI,EAAtB,SACE,gBAAC1I,EAAD,WACE,gBAACG,EAAD,WACE,eAACS,EAAD,4CACA,eAAC,GAAD,CACEwF,QApBU,WAClBkB,GAAa,SAACoB,GAAD,MAAoC,SAAjBA,EAA0B,QAAU,WAoB5D9B,UAAWA,EACXD,UAAW+B,EAAapI,OAAOO,YAEjC,eAACmB,GAAD,CACE2G,KAAK,oEACLlM,OAAO,SACPmM,IAAI,sBAHN,SAKE,eAAC9G,GAAD,CAAYgF,KAAM4B,EAAapI,OAAOO,iBAI1C,eAACC,GAAD,UACE,gBAACC,GAAD,WACE,eAACG,GAAD,sBACA,eAAC,GAAD,CACEiF,SAAU1B,EACVnC,aAAc+B,GAAK6C,cACnBlI,MAAM,6BACNmD,SAAUoF,KAEVlD,GAAKwE,sBACL,eAAC,GAAD,CACExG,MAAOsD,EAAuByB,WAC9BjB,SAAU1B,EACVnC,aAAc+B,GAAKyE,6BACnB9J,MAAM,2BACNmD,SAAU,SAACc,GACTuE,EAA0BnE,GAAaJ,EAAI,OAIhDoB,GAAKwE,sBACJ,eAAC,GAAD,CACE1C,SAAU1B,EACVsE,YAAa,YACbC,KAAM,SACNC,UAAW,GACX9G,SAAU,SAACC,GAAD,OACRqF,EACE7D,KAAKF,IAAIL,GAAajB,EAAE3F,OAAO4F,OAAQ,aAG3CA,MAAO4B,IAIVI,GAAKwE,sBACJ,eAAC,GAAD,CACE1C,SAAU1B,EACVsE,YAAa,iBACbC,KAAM,SACNC,UAAW,EACX9G,SAAU,SAACC,GAAD,OACRuF,EACE/D,KAAKF,IAAIL,GAAajB,EAAE3F,OAAO4F,OAAQ,SAG3CA,MAAOqF,IAIVrD,GAAKwE,sBACJ,eAAC,GAAD,CACE1C,SAAU1B,EACVsE,YAAa,wBACbC,KAAM,SACNC,UAAW,EACX9G,SAAU,SAACC,GAAD,OACRoF,EACE5D,KAAKF,IAAIL,GAAajB,EAAE3F,OAAO4F,OAAQ,QAG3CA,MAAOsD,IAGX,eAAChE,GAAD,CACEyE,QA9Fe,WACzB,IAAMpC,EAAWP,GAAaY,GAAK6E,gBAAiB7E,GAAK8E,iBACnDC,EAAU3F,GAAaY,GAAK6E,gBAAiB7E,GAAKgF,gBAExD5B,EAAmBzD,GACnB2D,EAAiByB,IA0FPjD,SAAU1B,EAFZ,uCAQJ,eAACjE,EAAD,CAASV,IAAKmI,EAAd,SACG7D,GACC,eAAC,GAAD,CACE3B,KAAMuE,GAAoBjB,GAC1BA,gBAAiBA,EACjB3B,QAASA,EACTF,aAAc2D,EACdyB,YAAavB,EACb9D,gBAAiBA,EACjB0B,uBAAwBA,EACxBP,uBAAwB8C,YE3JvBqB,I,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.d34d068e.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365 c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63 c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996 c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136 c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559 c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559 c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997 c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851 c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136 c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41 c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126 c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817 c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994 c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849 c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24 c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979 c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146 c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995 c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906 C438.536,184.851,428.728,148.168,409.132,114.573z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgGithubLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"438.549px\",\n    height: \"438.549px\",\n    viewBox: \"0 0 438.549 438.549\",\n    style: {\n      enableBackground: \"new 0 0 438.549 438.549\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithubLogo);\nexport default __webpack_public_path__ + \"static/media/github-logo.9c0b26d3.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components'\nimport { ReactComponent as GithubLogo } from 'src/assets/github-logo.svg'\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n`\n\nconst Header = styled.header`\n  background-color: ${({ theme }) => theme.colors.surface};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Content = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  flex: 1;\n  flex-flow: column;\n`\n\nconst H1 = styled.h1`\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n  @media (max-width: 992px) {\n    font-size: 22px;\n  }\n`\n\nconst HeaderTitle = styled(H1)`\n  color: ${({ theme }) => theme.colors.onSurface};\n  text-align: center;\n  justify-content: center;\n  flex: 1;\n`\n\nconst ToolBar = styled.div`\n  background-color: ${({ theme }) => theme.colors.surface};\n  display: flex;\n  padding: 0px 8px;\n`\n\nconst FieldSet = styled.fieldset`\n  background-color: ${({ theme }) => theme.colors.background};\n  padding: 12px 16px;\n  border-radius: 6px;\n  border-width: 1px;\n  border-color: ${({ theme }) => theme.colors.onBackground};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  column-gap: 8px;\n  row-gap: 8px;\n`\n\nconst FieldSetLegend = styled.legend`\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  padding: 0px 4px;\n`\n\nconst DropDown = styled.select`\n  padding: 8px;\n  font-size: 16px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  outline: none;\n\n  :hover {\n    opacity: 0.85;\n  }\n  border-radius: 6px;\n`\n\nconst DropDownItem = styled.option``\n\nconst SortVisualizerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nconst Input = styled.input`\n  font-size: 16px;\n  padding: 8px;\n\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n  border-width: 1px;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.onSurface};\n  }\n  :hover {\n    opacity: 0.85;\n  }\n\n  outline: none;\n`\n\nconst PrimaryButton = styled.button`\n  font-size: 16px;\n  padding: 8px;\n  min-width: 75px;\n  background-color: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.onSurface};\n\n  :hover {\n    opacity: 0.85;\n  }\n  :disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  border-radius: 6px;\n`\n\nconst ThemeLogo = styled.div`\n  width: 32px;\n  height: 32px;\n  :hover {\n    opacity: 0.55;\n  }\n  align-self: center;\n`\nconst GithubIcon = styled(GithubLogo)`\n  width: 32px;\n  height: 32px;\n  margin: 0px 16px;\n  :hover {\n    opacity: 0.55;\n  }\n`\n\nconst Link = styled.a`\n  text-decoration: none;\n`\n\nexport {\n  Container,\n  Header,\n  HeaderTitle,\n  Content,\n  ToolBar,\n  DropDown,\n  DropDownItem,\n  SortVisualizerContainer,\n  Input,\n  PrimaryButton,\n  ThemeLogo,\n  Link,\n  FieldSet,\n  FieldSetLegend,\n  GithubIcon,\n}\n","import React, { FunctionComponent, PropsWithChildren } from 'react'\nimport { DropDown, DropDownItem } from './GlobalComponent'\n\ntype Item = {\n  key: string\n  name: string\n}\n\ntype Props = {\n  disabled: boolean\n  dropdownList: Array<Item>\n  title?: string\n  value?: string\n  onChange?: (id: string) => void | null\n}\n\nconst DropdownList: FunctionComponent<Props> = (\n  props: PropsWithChildren<Props>,\n) => {\n  return (\n    <DropDown\n      {...props}\n      onChange={(e) => {\n        props.onChange?.(e.target.value)\n      }}\n    >\n      {props.dropdownList.map((item) => (\n        <DropDownItem key={item.key} value={item.key}>\n          {item.name}\n        </DropDownItem>\n      ))}\n    </DropDown>\n  )\n}\n\nexport default DropdownList\n","import styled from 'styled-components'\n\ntype VerticalLineProp = {\n  height: any\n  width: any\n  isSelected: boolean\n}\n\nconst VerticalLine = styled.div.attrs((props: VerticalLineProp) => ({\n  height: props.height,\n  width: props.width,\n  isSelected: props.isSelected,\n  style: {\n    height: props.height,\n    width: props.width,\n  },\n}))`\n  background-color: ${({ theme, isSelected }) =>\n    isSelected ? theme.colors.primary : theme.colors.secondary};\n  margin-left: 0.1%;\n  margin-right: 0.1%;\n  display: flex;\n`\n\nexport default VerticalLine\n","import styled from 'styled-components'\n\nconst HorizontalList = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: flex-end;\n  padding: 8px;\n`\n\nexport default HorizontalList\n","import ArrayData from \"../sort/types/ArrayData\";\n\nconst sleep = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst generateRandomNumbers = (\n  max: number,\n  limit: number\n): Array<ArrayData> => {\n  if (max <= 0 || limit <= 0 || isNaN(max) || isNaN(limit)) return [];\n\n  const randomArray = new Array<ArrayData>(limit);\n  for (let i = 0; i < limit; i++) {\n    randomArray[i] = {\n      data: Math.floor(Math.random() * max),\n      key: i.toString(),\n    };\n  }\n  return randomArray;\n};\n\nconst safeParseInt = (num: string, defaultValue: number = 0) => {\n  try {\n    return parseInt(num);\n  } catch (e: any) {\n    return defaultValue;\n  }\n};\n\nconst getRandomInt = (min: number, max: number): number => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport { sleep, generateRandomNumbers, safeParseInt, getRandomInt };\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { sleep } from '../../utils/utils'\nimport ArrayData from '../types/ArrayData'\n\nimport SortVisualizerScreenProp from '../types/SortVisualizerScreenProp'\n\ntype SortAlgorithmReturnType = {\n  initiateSort: Function\n  data: Array<ArrayData>\n  swapIndices: Array<number>\n  isSortingInProgress: boolean\n  maxValue: number\n}\n\nconst useSortAlgorithm = (\n  props: SortVisualizerScreenProp,\n): SortAlgorithmReturnType => {\n  const maxValue = Math.max(props.datasetMaxValue, props.screenHeight)\n\n  const [data, setData] = useState<Array<ArrayData>>(props.dataset)\n\n  const [swapIndices, setSwapIndices] = useState([-1, -1])\n\n  const [isSortingInProgress, setIsSortingInProgress] = useState(false)\n\n  const isComponentActive = useRef<boolean>(false)\n\n  const cleanupCallback = useCallback(() => {\n    console.log('Cleaning up * sort screen')\n    isComponentActive.current = false\n  }, [])\n\n  useEffect(() => {\n    setData(props.dataset)\n    isComponentActive.current = true\n    return cleanupCallback\n  }, [cleanupCallback, props.dataset])\n\n  const initiateBubbleSort = async () => {\n    console.log('Running bubble sort')\n\n    props.exectionStatusCallback(true)\n    setIsSortingInProgress(true)\n\n    let swapIndex1 = 1\n    let swapIndex2 = -1\n\n    for (let i = 0; i < data.length && isComponentActive.current; i++) {\n      let isSwapOccured = false\n      for (let j = 0; j < data.length - 1 && isComponentActive.current; j++) {\n        if (data[j].data > data[j + 1].data) {\n          const temp = data[j]\n          data[j] = data[j + 1]\n          data[j + 1] = temp\n\n          isSwapOccured = true\n          swapIndex1 = j\n          swapIndex2 = j + 1\n        }\n\n        if (isSwapOccured) {\n          setData((a) => data.slice())\n          setSwapIndices([swapIndex1, swapIndex2])\n          await sleep(props.executionDelayInMillis)\n        }\n      }\n      if (!isSwapOccured) break\n    }\n\n    props.exectionStatusCallback(false)\n    setIsSortingInProgress(false)\n  }\n\n  const initiateSelectionSort = async () => {\n    console.log('Running selection sort')\n\n    props.exectionStatusCallback(true)\n    setIsSortingInProgress(true)\n\n    for (let i = 0; i < data.length - 1 && isComponentActive.current; i++) {\n      let minIndex = i\n      for (let j = i + 1; j < data.length && isComponentActive.current; j++) {\n        if (data[j].data < data[minIndex].data) {\n          minIndex = j\n        }\n      }\n      if (minIndex !== i) {\n        const temp = data[i]\n        data[i] = data[minIndex]\n        data[minIndex] = temp\n\n        setData((a) => data.slice())\n        setSwapIndices([i, minIndex])\n        await sleep(props.executionDelayInMillis)\n      }\n    }\n\n    props.exectionStatusCallback(false)\n    setIsSortingInProgress(false)\n  }\n\n  const initiateSort = () => {\n    switch (props.sortAlgorithmId) {\n      case 'bubble_sort':\n        initiateBubbleSort()\n        break\n      case 'selection_sort':\n        initiateSelectionSort()\n        break\n      default:\n        console.log('Unknow sort id')\n        break\n    }\n  }\n\n  return {\n    initiateSort,\n    data,\n    swapIndices,\n    isSortingInProgress,\n    maxValue,\n  }\n}\n\nexport default useSortAlgorithm\n","import React, { PropsWithChildren } from 'react'\n\nimport VerticalLine from '../components/VerticalLine'\nimport HorizontalList from '../components/HorizontalList'\nimport {\n  PrimaryButton,\n  SortVisualizerContainer,\n} from '../../../common/components/GlobalComponent'\nimport SortVisualizerScreenProp from '../../types/SortVisualizerScreenProp'\nimport useSortAlgorithm from '../useSortAlgorithm'\n\nconst SortScreen = (props: PropsWithChildren<SortVisualizerScreenProp>) => {\n  console.log('Component re-render')\n\n  const {\n    maxValue,\n    data,\n    swapIndices,\n    isSortingInProgress,\n    initiateSort,\n  } = useSortAlgorithm(props)\n\n  return (\n    <SortVisualizerContainer>\n      <HorizontalList>\n        {data.map((item, index, arr) => (\n          <VerticalLine\n            key={item.key}\n            height={(item.data / maxValue) * 100 + '%'}\n            width={'50px'}\n            isSelected={index === swapIndices[0] || index === swapIndices[1]}\n          />\n        ))}\n      </HorizontalList>\n\n      <PrimaryButton\n        disabled={isSortingInProgress}\n        onClick={() => initiateSort()}\n      >\n        Start\n      </PrimaryButton>\n    </SortVisualizerContainer>\n  )\n}\n\nexport default SortScreen\n","export type Colors = {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  onBackground: string\n  onSurface: string\n  onPrimary: string\n  onSecondary: string\n}\n\nconst LightColors = {\n  background: '#FFFFFF',\n  surface: '#FFFFFF',\n  primary: '#6200EE',\n  secondary: '#03DAC6',\n  onBackground: '#000000',\n  onSurface: '#000000',\n  onPrimary: '#FFFFFF',\n  onSecondary: '#000000',\n}\n\nconst DarkColors = {\n  background: '#121212',\n  surface: '#121212',\n  primary: '#BBB6FC',\n  secondary: '#03DAC6',\n  onBackground: '#DDFFFFFF',\n  onSurface: '#DDFFFFFF',\n  onPrimary: '#000000',\n  onSecondary: '#000000',\n}\n\nexport { LightColors, DarkColors }\n","import styled from \"styled-components\";\nimport { Input } from \"./GlobalComponent\";\n\nconst ToolbarNumberInput = styled(Input)`\n  margin: 8px;\n`;\n\nexport default ToolbarNumberInput;\n","import React, { FunctionComponent, PropsWithChildren } from 'react'\nimport { BiSun, BiMoon } from 'react-icons/bi'\nimport { ThemeLogo } from './GlobalComponent'\n\ntype Props = {\n  themeMode: string\n  fillColor: string\n  onClick?: () => void | null\n}\n\nconst ThemeModeIcon: FunctionComponent<Props> = (\n  props: PropsWithChildren<Props>,\n) => {\n  const { fillColor, themeMode, onClick } = props\n  return (\n    <ThemeLogo onClick={onClick}>\n      {themeMode === 'dark' ? (\n        <BiMoon size={32} fill={fillColor} />\n      ) : (\n        <BiSun size={32} fill={fillColor} />\n      )}\n    </ThemeLogo>\n  )\n}\n\nexport default ThemeModeIcon\n","import { useState, useRef, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport {\n  Header,\n  HeaderTitle,\n  Content,\n  Container,\n  ToolBar,\n  PrimaryButton,\n  Link,\n  FieldSet,\n  FieldSetLegend,\n  GithubIcon,\n} from './common/components/GlobalComponent'\nimport DropdownList from './common/components/DropdownList'\nimport SortScreen from './sort/algorithm/screens/SortScreen'\nimport { getTheme } from './styles/Themes'\nimport {\n  generateRandomNumbers,\n  safeParseInt,\n  getRandomInt,\n} from './utils/utils'\nimport ArrayData from './sort/types/ArrayData'\nimport ToolbarNumberInput from './common/components/Input'\nimport Config from './sort/types/Config'\nimport ThemeModeIcon from './common/components/ThemeModeIcon'\nconst data: Config = require('./assets/data.json')\n\nconst App = () => {\n  const [themeMode, setThemeMode] = useState('dark')\n\n  const [sortAlgorithmId, setSortAlgorithmId] = useState('bubble_sort')\n  const [executionDelayInMillis, setExecutionDelayInMillis] = useState(5)\n\n  const [datasetMaxValue, setDatasetMaxValue] = useState(5000)\n  const [datasetLength, setDatasetLength] = useState(50)\n  const [dataset, setDataset] = useState<Array<ArrayData>>([])\n\n  const [contentHeight, setContentHeight] = useState(0)\n  const [contentWidth, setContentWidth] = useState(0)\n  const contentRef = useRef<HTMLDivElement>(null)\n\n  const [isSortingInProgress, setSortingInProgress] = useState(false)\n\n  useEffect(() => {\n    const height = contentRef?.current?.clientHeight\n    setContentHeight(height ? height : 0)\n\n    const width = contentRef?.current?.clientWidth\n    setContentWidth(width ? width : 0)\n\n    setDataset(generateRandomNumbers(datasetMaxValue, datasetLength))\n  }, [contentRef, datasetMaxValue, datasetLength, sortAlgorithmId])\n\n  const toggleTheme = () => {\n    setThemeMode((currentTheme) => (currentTheme === 'dark' ? 'light' : 'dark'))\n  }\n\n  const generateNewDataset = () => {\n    const maxValue = getRandomInt(data.minDatasetValue, data.maxDatasetValue)\n    const maxSize = getRandomInt(data.minDatasetValue, data.maxDatasetSize)\n\n    setDatasetMaxValue(maxValue)\n    setDatasetLength(maxSize) // will trigger useEffect therefore populate new dataset\n  }\n\n  const currentTheme = getTheme(themeMode)\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <Container>\n        <Header>\n          <HeaderTitle>Sorting algorithem visualizer</HeaderTitle>\n          <ThemeModeIcon\n            onClick={toggleTheme}\n            themeMode={themeMode}\n            fillColor={currentTheme.colors.onSurface}\n          />\n          <Link\n            href=\"https://github.com/half-blood-prince/sorting-visualizer-algorithm\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GithubIcon fill={currentTheme.colors.onSurface} />\n          </Link>\n        </Header>\n\n        <ToolBar>\n          <FieldSet>\n            <FieldSetLegend>Options</FieldSetLegend>\n            <DropdownList\n              disabled={isSortingInProgress}\n              dropdownList={data.sortAlgorithm}\n              title=\"Select a sorting algorithm\"\n              onChange={setSortAlgorithmId}\n            />\n            {!data.showAdvancedControls && (\n              <DropdownList\n                value={executionDelayInMillis.toString()}\n                disabled={isSortingInProgress}\n                dropdownList={data.executionDelayInMilliseconds}\n                title=\"Select a execution delay\"\n                onChange={(ms) => {\n                  setExecutionDelayInMillis(safeParseInt(ms, 0))\n                }}\n              />\n            )}\n            {data.showAdvancedControls && (\n              <ToolbarNumberInput\n                disabled={isSortingInProgress}\n                placeholder={'Max value'}\n                type={'number'}\n                maxLength={10}\n                onChange={(e) =>\n                  setDatasetMaxValue(\n                    Math.min(safeParseInt(e.target.value), 999999999),\n                  )\n                }\n                value={datasetMaxValue}\n              />\n            )}\n\n            {data.showAdvancedControls && (\n              <ToolbarNumberInput\n                disabled={isSortingInProgress}\n                placeholder={'Number of data'}\n                type={'number'}\n                maxLength={5}\n                onChange={(e) =>\n                  setDatasetLength(\n                    Math.min(safeParseInt(e.target.value), 99999),\n                  )\n                }\n                value={datasetLength}\n              />\n            )}\n\n            {data.showAdvancedControls && (\n              <ToolbarNumberInput\n                disabled={isSortingInProgress}\n                placeholder={'Execution delay in ms'}\n                type={'number'}\n                maxLength={4}\n                onChange={(e) =>\n                  setExecutionDelayInMillis(\n                    Math.min(safeParseInt(e.target.value), 9999),\n                  )\n                }\n                value={executionDelayInMillis}\n              />\n            )}\n            <PrimaryButton\n              onClick={generateNewDataset}\n              disabled={isSortingInProgress}\n            >\n              Generate new dataset\n            </PrimaryButton>\n          </FieldSet>\n        </ToolBar>\n        <Content ref={contentRef}>\n          {dataset && (\n            <SortScreen\n              name={getSortAlgorithName(sortAlgorithmId)}\n              sortAlgorithmId={sortAlgorithmId}\n              dataset={dataset}\n              screenHeight={contentHeight}\n              screenWidth={contentWidth}\n              datasetMaxValue={datasetMaxValue}\n              executionDelayInMillis={executionDelayInMillis}\n              exectionStatusCallback={setSortingInProgress}\n            />\n          )}\n        </Content>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nconst getSortAlgorithName = (id: string): string => {\n  const element = data.sortAlgorithm.find((e: any) => e.key.toString() === id)\n  return element ? element.name : ''\n}\n\nexport default App\n","import { LightColors, DarkColors, Colors } from \"./Colors\";\nimport { DefaultTheme } from \"styled-components\";\n\ndeclare module \"styled-components\" {\n  export interface DefaultTheme {\n    theme: string;\n    colors: Colors;\n  }\n}\n\nexport const getTheme = (theme: string): DefaultTheme => {\n  return { theme: theme, colors: theme === \"dark\" ? DarkColors : LightColors };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './Main'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}